# We are using the same logic as we used for Longest Palindromic Substring
# Using DP:
class Solution:
    def countSubstrings(self, s: str) -> int:
        count = len(s)
        dp = [[False for i in range(len(s))] for i in range(len(s))]
        for i in range(len(s)):
            dp[i][i] = True
            
        for end in range(0, len(s)):
            for start in range(end - 1, -1, -1):
                if s[start] == s[end]:
                    if start == end - 1 or dp[start+1][end-1] == True:
                        dp[start][end] = True
                        count += 1
        return count

##########################################################################

# Using Two Pointers:
class Solution:
    def countSubstrings(self, s: str) -> int:
        count = 0
        for i in range(len(s)):
            left, right = i, i
            while left >= 0 and right < len(s) and s[left] == s[right]:
                count += 1
                left -= 1
                right += 1
        
        for i in range(len(s)-1):
            left, right = i, i+1
            while left >= 0 and right < len(s) and s[left] == s[right]:
                count += 1
                left -= 1
                right += 1
        return count



#################################################################################















# class Solution:
#     def countSubstrings(self, s: str) -> int:
#         count = 0 
#         for i in range(len(s)):
#             left = right = i
#             while left >= 0 and right < len(s):
#                 if s[left] == s[right]:
#                     count += 1
#                     left -= 1
#                     right += 1
#                 else: break 
            
#             left = i
#             right = i+1
#             while left >= 0 and right < len(s):
#                 if s[left] == s[right]:
#                     count += 1
#                     left -= 1
#                     right += 1
#                 else: break
                    
#         return count    
