Description
Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), determine if a person could attend all meetings.

Link: https://www.lintcode.com/problem/920/description

Simply sort the intervals as  intervals.sort(key=lambda x:x.start).
After that just check if meetings are colliding or not using the sorted intervals. 


from typing import (
    List,
)
from lintcode import (
    Interval,
)

"""
Definition of Interval:
class Interval(object):
    def __init__(self, start, end):
        self.start = start
        self.end = end
"""

class Solution:
    """
    @param intervals: an array of meeting time intervals
    @return: if a person could attend all meetings
    """
    def can_attend_meetings(self, intervals: List[Interval]) -> bool:
        # Write your code here
        intervals.sort(key=lambda x:x.start)
        i = 0
        for j in range(1, len(intervals)):
            if intervals[j].start < intervals[i].end:
                return False
            i = j
        return True
