# We will use the same logic and code we used for Number of Islands
# This time we will find the area by calculating the number of grid cells which are 
# connected. 

class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        row, col = len(grid), len(grid[0])
        visited = set()
        def dfs(i, j):
            left, right, top, bottom = 0, 0, 0, 0
            visited.add((i, j))
            if i-1 >= 0 and grid[i-1][j] == 1 and (i-1, j) not in visited:
                top = dfs(i-1, j) + 1
            if i+1 < row and grid[i+1][j] == 1 and (i+1, j) not in visited:
                bottom = dfs(i+1, j) + 1
            if j-1 >= 0 and grid[i][j-1] == 1 and (i, j-1) not in visited:
                left = dfs(i, j-1) + 1
            if j+1 < col and grid[i][j+1] == 1 and (i, j+1) not in visited:
                right = dfs(i, j+1) + 1
            return left + right + top + bottom
        
        maxArea = 0
        for i in range(row):
            for j in range(col):
                if grid[i][j] == 1 and (i, j) not in visited:
                    maxArea = max(maxArea, 1 + dfs(i, j))
        return maxArea
